name: Deploy to ECR

on:
  push:
    branches: [ dev, stable ]

env:
  ECR_REPOSITORY: mailbox
  EKS_CLUSTER_NAME: eks-demo
  AWS_REGION: ap-northeast-1

jobs:
  build:
    name: Deployment
    runs-on: ubuntu-latest
    steps:
      - name: Set Output Var
        id: deploy-var
        run: |
          echo "BRANCH=$GITHUB_REF_NAME" >> $GITHUB_OUTPUT
          echo "TIME=$(date +'%Y%m%d-%H:%M:%S')" >> $GITHUB_OUTPUT
          echo "HASH=$(echo $GITHUB_SHA | cut -c 1-6)" >> $GITHUB_OUTPUT

      - name: Check out code
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{env.AWS_REGION}}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: "${{ steps.deploy-var.outputs.HASH }}-${{ steps.deploy-var.outputs.BRANCH }}-${{ steps.deploy-var.outputs.TIME }}"
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG -f docker/Dockerfile .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

#      - name: Update kube config
#        run: aws eks update-kubeconfig --name $EKS_CLUSTER_NAME --region $AWS_REGION

#      - name: Deploy to EKS
#        env:
#          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
#          IMAGE_TAG: ${{ steps.commit.outputs.short }}
#        run: |
#          sed -i.bak "s|DOCKER_IMAGE|$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG|g" manifests/hello-app-deployment.yaml && \
#          kubectl apply -f manifests/echo-app-deployment.yaml