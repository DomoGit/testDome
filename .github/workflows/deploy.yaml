name: Deploy to ECR

on:
  push:
    branches: [ dev ]

env:
  ECR_REPOSITORY: mailbox
  EKS_CLUSTER_NAME: eks-demo
  AWS_REGION: ap-northeast-1

jobs:
  build:
    name: Deployment
    runs-on: ubuntu-latest
    steps:
      # 输出分支名、时间、commit hash
      - name: Set Output Var
        id: deploy-var
        run: |
          echo "BRANCH=$GITHUB_REF_NAME" >> $GITHUB_OUTPUT
          echo "TIME=$(date +'%Y%m%d-%H-%M-%S')" >> $GITHUB_OUTPUT
          echo "HASH=$(echo $GITHUB_SHA | cut -c 1-6)" >> $GITHUB_OUTPUT

      # 检出代码
      - name: Check out code
        uses: actions/checkout@v2

      # 安装 Go 环境
      - name: setup go environment
        uses: actions/setup-go@v4
        with:
          go-version: '^1.18.0'

      # 配置 AWS 认证
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{env.AWS_REGION}}

      # 登录 ECR
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      # 构建镜像并推送到 ECR
      - name: Build, tag, and push image to Amazon ECR
        id: build-push-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: "${{ steps.deploy-var.outputs.HASH }}-${{ steps.deploy-var.outputs.BRANCH }}-${{ steps.deploy-var.outputs.TIME }}"
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan github.com >> ~/.ssh/known_hosts
          git config --global url."git@github.com:".insteadOf "https://github.com/"
          git config --global user.name "${{ vars.ACTOR }}"
          git config --global user.email "${{ vars.ACTOR_MAIL }}"
          go env -w GOPRIVATE=github.com/holla-world/golibr.git
          go env -w GONOSUMDB=github.com
          go mod tidy
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG -f docker/Dockerfile .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_OUTPUT

      # 配置kubectl
      - name: Update kube config
        run: aws eks update-kubeconfig --name $EKS_CLUSTER_NAME --region $AWS_REGION

      # 部署到 EKS
      - name: Deploy to EKS
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ steps.build-push-image.outputs.IMAGE_TAG }}
        run: |
          sed -i.bak "s|DOCKER_IMAGE|$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG|g" manifests/echo-app-deployment.yaml && \
          kubectl apply -f manifests/echo-app-deployment.yaml